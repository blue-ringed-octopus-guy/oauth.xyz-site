{"version":3,"sources":["webpack:///./src/components/transactionrequest.js","webpack:///./src/pages/transactionrequest.mdx"],"names":["TransactionRequest","codeValues","client","label","full","name","uri","handle","interact","type","callback","state","user","assertion","resources","actions","locations","data","both","key","jwks","keys","kty","e","kid","alg","n","selected","change","field","value","s","_this","setState","Object","forEach","render","transaction","reduce","result","options","omit","selectors","map","react_default","a","createElement","selector","onChange","concat","all","selectorlist","code","from","to","React","Component","layoutProps","MDXContent","props","_React$Component","call","this","layout","DefaultLayout","_this$props","components","objectWithoutPropertiesLoose_default","dist","Layout","assign","seo","title","keywords","parentName","transactionrequest","gatsby_browser_entry","_frontmatter"],"mappings":"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","file":"component---src-pages-transactionrequest-mdx-00fe50d124ba08220af4.js","sourcesContent":["import React from 'react'\n\nimport Code from '../components/code'\nimport Selector from '../components/selector'\nimport SelectorList from '../components/selectorlist'\n\nclass TransactionRequest extends React.Component {\n\n  codeValues = {\n    client: {\n      label: 'Client',\n      full: {\n          name: \"My Client Display Name\",\n          uri: \"https://example.net/client\"\n      },\n      handle: \"VBUEOIQA82PBY2ZDJW7Q\"\n    },\n    \n    interact: {\n      label: 'Interact',\n      full: {\n        type: \"redirect\",\n        callback: \"https://client.example.net/return/123455\",\n        state: \"LKLTI25DK82FX4T4QFZC\"\n      },\n      handle: \"JMMLJ6393FI7ST9B1SRS\"\n    },\n    \n    user: {\n      label: 'User',\n      full: {\n          assertion: \"eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogImlzcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiAibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDEzMTEyODA5NzAsCiAibmFtZSI6ICJKYW5lIERvZSIsCiAiZ2l2ZW5fbmFtZSI6ICJKYW5lIiwKICJmYW1pbHlfbmFtZSI6ICJEb2UiLAogImdlbmRlciI6ICJmZW1hbGUiLAogImJpcnRoZGF0ZSI6ICIwMDAwLTEwLTMxIiwKICJlbWFpbCI6ICJqYW5lZG9lQGV4YW1wbGUuY29tIiwKICJwaWN0dXJlIjogImh0dHA6Ly9leGFtcGxlLmNvbS9qYW5lZG9lL21lLmpwZyIKfQ.rHQjEmBqn9Jre0OLykYNnspA10Qql2rvx4FsD00jwlB0Sym4NzpgvPKsDjn_wMkHxcp6CilPcoKrWHcipR2iAjzLvDNAReF97zoJqq880ZD1bwY82JDauCXELVR9O6_B0w3K-E7yM2macAAgNCUwtik6SjoSUZRcf-O5lygIyLENx882p6MtmwaL1hd6qn5RZOQ0TLrOYu0532g9Exxcm-ChymrB4xLykpDj3lUivJt63eEGGN6DH5K6o33TcxkIjNrCD4XB1CKKumZvCedgHHF3IAK4dVEDSUoGlH9z4pP_eWYNXvqQOjGs-rDaQzUHl6cQQWNiDpWOl_lxXjQEvQ\",\n          type: \"oidc_id_token\"\n      },\n      handle: \"XUT2MFM1XBIKJKSDU8QM\"\n    },\n    \n    resources: {\n      label: 'Resources',\n      full: [{\n          actions: [\"read\", \"write\", \"dolphin\"],\n          locations: [\"https://server.example.net/\", \"https://resource.local/other\"],\n          data: [\"metadata\"]\n      }],\n      handle: [\"dolphin-metadata\"],\n      both: [\n        {\n                  actions: [\"read\", \"write\", \"dolphin\"],\n                  locations: [\"https://server.example.net/\", \"https://resource.local/other\"],\n                  data: [\"metadata\"]\n        },\n        \"dolphin-metadata\"        \n      ]\n    },\n    \n    key: {\n      label: 'Key',\n      full: {\n        jwks: {\n  \"keys\": [\n    {\n      \"kty\": \"RSA\",\n      \"e\": \"AQAB\",\n      \"kid\": \"xyz-1\",\n      \"alg\": \"RS256\",\n      \"n\": \"kOB5rR4Jv0GMeLaY6_It_r3ORwdf8ci_JtffXyaSx8xYJCCNaOKNJn_Oz0YhdHbXTeWO5AoyspDWJbN5w_7bdWDxgpD-y6jnD1u9YhBOCWObNPFvpkTM8LC7SdXGRKx2k8Me2r_GssYlyRpqvpBlY5-ejCywKRBfctRcnhTTGNztbbDBUyDSWmFMVCHe5mXT4cL0BwrZC6S-uu-LAx06aKwQOPwYOGOslK8WPm1yGdkaA1uF_FpS6LS63WYPHi_Ap2B7_8Wbw4ttzbMS_doJvuDagW8A1Ip3fXFAHtRAcKw7rdI4_Xln66hJxFekpdfWdiPQddQ6Y1cK2U3obvUg7w\"\n    }\n  ]\n}\n      },\n      handle: \"7C7C4AZ9KHRS6X63AJAO\"\n    }\n  }\n  \n  state = {\n    selected: {\n      client: 'full',\n      resources: 'handle',\n      interact: 'full',\n      key: 'full',\n      user: 'omit'\n    }\n  }\n\n  \n  change = (field) => (value) => {\n\n    // if we're toggling everything at once\n    if (field === 'all') {\n      Object.keys(this.state.selected).forEach((field) => {\n        this.change(field)(value);\n      });\n      return;\n    }\n\n    const s = this.state.selected;\n    s[field] = value;\n    \n    this.setState({\n      selected: s\n    });\n    \n  }\n  \n  render = () => {\n\n    // build the transaction object based on the current selection\n    const transaction = Object.keys(this.codeValues).reduce((result, key) => {\n      result[key] = this.codeValues[key][this.state.selected[key]];\n      return result;\n    }, {});\n    \n    // build the selectors\n    const options = {\n      full: \"Full\",\n      handle: \"Handle\",\n      omit: \"Off\"\n    };\n    \n    const selectors = Object.keys(this.codeValues).map((field) => {\n      if (field == 'resources') {\n        \n        const moreOptions = {\n          full: \"Full\",\n          handle: \"Handle\",\n          both: \"Both\",\n          omit: \"Off\"\n        };\n        \n        return (\n          <Selector onChange={this.change(field)} label={this.codeValues[field].label} selected={this.state.selected[field]} options={moreOptions} />\n        );\n      } else {\n        return (\n          <Selector onChange={this.change(field)} label={this.codeValues[field].label} selected={this.state.selected[field]} options={options} />\n        );\n      }\n    })\n    // add the \"all\" selector\n    .concat(<Selector onChange={this.change('all')} label=\"All\" all options={options} />);\n\n    return (\n      <div>\n          <SelectorList>\n            {selectors}\n          </SelectorList>\n          <Code   \n            from=\"client\" to=\"as\"\n            code={transaction} \n          />\n      </div>\n    );\n  \n  }\n\n};\n\nexport default TransactionRequest;","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/Users/jricher/Projects/oauth.xyz-site/src/components/layout.js\";\nimport { Link } from 'gatsby';\nimport TransactionRequest from '../components/transactionrequest';\nimport SEO from '../components/seo';\nimport Code from '../components/code';\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n\n\n      <SEO title=\"Transaction Request\" keywords={['oauth', 'authorization', 'security']} />\n      <MDXTag name=\"h1\" components={components}>{`Transaction Request`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The client begins the transaction by creating a transaction request. This is a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`JSON`}</MDXTag>{` document `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`POST`}</MDXTag>{`ed to the authorization server's transaction endpoint. This request starts the transaction regardless of the type of client, the type of resource being accessed, or the type of authorizations needed to access said resources. `}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The transaction request contains five parts:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`client`}</MDXTag>{` includes information about how the client software making the request`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`resources`}</MDXTag>{` contains a list of resources that the client is requesting access to`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`interact`}</MDXTag>{` contains information about how the client is able to get the user to interact with the AS, if necessary`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`key`}</MDXTag>{` contains information about the key the client is able to provide proof of possession for during this transaction and any related actions`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`user`}</MDXTag>{` contains assertions about the current user `}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Each ot these sections is optional and can be also sent as a handle instead. When sent as a handle, the AS looks up the handle value to determine the values associated with that handle. The AS can also limit which values can be used together, such as only allowing certain callback URIs or keys when used with a client handle. `}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Note that the JSON in all sections is potentially multimodal. That is to say, when sent as a fully-formed request, it is a JSON `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`object`}</MDXTag>{`. When sent as a handle, it is sent as a JSON `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`string`}</MDXTag>{`. `}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`This example shows how the different sections can be composed with each other in a transaction request.`}</MDXTag>\n      <TransactionRequest />\n      <MDXTag name=\"p\" components={components}>{`Each of the sections is detailed below. The AS will send a `}<Link to=\"/transactionresponse\">{`transaction response`}</Link>{` in response.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Client`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`client`}</MDXTag>{` section describes the client software that is making the request. This information can be used during any interaction with the user that the AS might need to do, and for auditing and review of authorization decisions. `}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The AS can statically issue a client handle to a piece of software (or its developer) to be used in place of this section. In this way, it takes the place of the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`client_id`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`client_secret`}</MDXTag>{` of OAuth 2. In these cases, the AS will likely also keep references to which `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`resources`}</MDXTag>{` the client can ask for, which `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`interact`}</MDXTag>{` methods it is allowed to use, which `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`key`}</MDXTag>{`s it is allowed to present, and even what kinds of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`user`}</MDXTag>{` information it can assert. `}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`A client that is accessing things of its own accord and not on behalf of a user has to be pre-registered with a handle in this way and attached to a key.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`An AS can also dynamically generate a client handle and return it to the client during the initial transaction response. This handle can be used by the same piece of software to identify itself in future transactions.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Resources`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`resources`}</MDXTag>{` parameter contains a list of all resources and APIs the client wishes to access. Each object in this array lists the types of actions the client can take, the URIs where those actions can be taken, and the kinds of data that the client expects access to. `}</MDXTag>\n      <Code code={{\n        actions: [\"read\", \"write\", \"dolphin\"],\n        locations: [\"https://server.example.net/\", \"https://resource.local/other\"],\n        data: [\"metadata\"]\n      }} />\n      <MDXTag name=\"p\" components={components}>{`An AS can publish pre-set resources as resource handles that can be passed by the client to the AS during a transaction request, similar to OAuth 2's `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`scope`}</MDXTag>{` concept. The AS can deterine a default set of resources for a client not asking for anything specifically.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`An AS can also dynamically generate a resources handle and return it to the client during the initial transaction response. This handle can be used by the same piece of software to identify this same kind of request in future transactions.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The client can send several of these objects of handles in a single request, which the AS interprets as the client requesting access to all of the resources. `}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Interact`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`interact`}</MDXTag>{` parameter lets the client tell the AS how to get a user to interact with the AS during a transaction. `}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`More detail is found in the `}<Link to=\"/interaction\">{`Interaction`}</Link>{` section.`}</MDXTag>\n      <MDXTag name=\"blockquote\" components={components}>\n        <MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`Do we care about an interact handle? Redirect based clients need to send a new state parameter every time anyway, and could potentially send a new callback URL while they're at it.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Key`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`key`}</MDXTag>{` parameter lets the client tell the AS which keys it is able to prove ownership of during the course of the transaction. `}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The AS can statically issue a key handle to a piece of software (or its developer). An AS can also dynamically generate a key handle and return it to the client during the initial transaction. This handle can be used by the same piece of software to identify its keys in future transactions.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Any keys referenced here, whether directly by value or by reference through a handle, have to be proved by the client during every request in the transaction. More detail is found in the `}<Link to=\"/keys\">{`Keys`}</Link>{` section. `}</MDXTag>\n      <MDXTag name=\"blockquote\" components={components}>\n        <MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`We need a mechanism for the AS to issue keys to the client during this process, and to acknowledge that it's accepted the presentation and proof of any keys sent by the client.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`User`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`user`}</MDXTag>{` parameter lets the client pass information to the AS about the current user in the form of an assertion or other set of claims gathered from a trusted source. These claims need to be able to be validated by the AS, and it should be additionally validated that the client is an authorized holder of this information. `}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`While this does not necessarily prove that the user in question is actually present with the client, it can allow the AS to make authorization decisions without user interaction in appropriately trusted scenarios.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The AS can dynamically generate a user handle and return it to the client in the transaction response. This handle can be used by the same piece of software to identify the same user in future transactions. In this way, it is similar to the persistent claims token from UMA 2.`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}