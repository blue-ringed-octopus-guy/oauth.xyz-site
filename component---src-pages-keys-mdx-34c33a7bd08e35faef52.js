(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{151:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return g}),n.d(t,"_frontmatter",function(){return y});n(56);var a=n(77),r=n.n(a),o=n(7),i=n.n(o),c=n(0),s=n.n(c),l=n(163),m=n(158),d=n(157),p=n(162),u=n(155),h={},g=function(e){function t(t){var n;return(n=e.call(this,t)||this).layout=m.a,n}return i()(t,e),t.prototype.render=function(){var e=this.props,t=e.components,n=r()(e,["components"]);return s.a.createElement(l.MDXTag,{name:"wrapper",Layout:this.layout,layoutProps:Object.assign({},h,n),components:t},s.a.createElement(d.a,{title:"Keys",keywords:["oauth","authorization","security"]}),s.a.createElement(l.MDXTag,{name:"h1",components:t},"Key Types"),s.a.createElement(l.MDXTag,{name:"p",components:t},"The client can present a key to the AS during the transaction process that it can use to bind itself to this and future requests. The AS can restrict access to certain keys, associated with particular clients and controlled through a registration process. The AS can also allow clients to dynamically present and prove a key at runtime, such as a key generated on a client device and bound to only that instance of the client software on that device. "),s.a.createElement(l.MDXTag,{name:"h2",components:t},"JSON Web Key Set (JWKS)"),s.a.createElement(l.MDXTag,{name:"p",components:t},"This client sends its public key to the server formatted as a JSON Web Key Set (JWKS). The keys must have a ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"kid")," (key identifier) field and an ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"alg")," (algorithm) field."),s.a.createElement(p.a,{from:"client",to:"as",language:"json",codeString:'{\n    "key": {\n        "jwks": {\n            "keys": [\n                {\n                    "kty": "RSA",\n                    "e": "AQAB",\n                    "kid": "xyz-1",\n                    "alg": "RS256",\n                    "n": "kOB5rR4Jv0GMeLaY6_It_r3ORwdf8ci_JtffXyaSx8xYJCCNaOKNJn_Oz0YhdHbXTeWO5AoyspDWJbN5w_7bdWDxgpD-y6jnD1u9YhBOCWObNPFvpkTM8LC7SdXGRKx2k8Me2r_GssYlyRpqvpBlY5-ejCywKRBfctRcnhTTGNztbbDBUyDSWmFMVCHe5mXT4cL0BwrZC6S-uu-LAx06aKwQOPwYOGOslK8WPm1yGdkaA1uF_FpS6LS63WYPHi_Ap2B7_8Wbw4ttzbMS_doJvuDagW8A1Ip3fXFAHtRAcKw7rdI4_Xln66hJxFekpdfWdiPQddQ6Y1cK2U3obvUg7w"\n                }\n            ]\n        }\n    }\n}\n'}),s.a.createElement(l.MDXTag,{name:"h2",components:t},"X509 Certificate"),s.a.createElement(l.MDXTag,{name:"p",components:t},"The client indicates its certificate as either an encoded certificate string, or as a certificate thumbprint as in OAuth 2's certificate-bound access token methods."),s.a.createElement(p.a,{from:"client",to:"as",language:"json",codeString:'{\n    "key": {\n        "cert": "MIIEHDCCAwSgAwIBAgIBATANBgkqhkiG9w0BAQsFADCBmjE3MDUGA1UEAwwuQmVzcG9rZSBFbmdpbmVlcmluZyBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eTELMAkGA1UECAwCTUExCzAJBgNVBAYTAlVTMRkwFwYJKoZIhvcNAQkBFgpjYUBic3BrLmlvMRwwGgYDVQQKDBNCZXNwb2tlIEVuZ2luZWVyaW5nMQwwCgYDVQQLDANNVEkwHhcNMTkwNDEwMjE0MDI5WhcNMjQwNDA4MjE0MDI5WjB8MRIwEAYDVQQDDAlsb2NhbGhvc3QxCzAJBgNVBAgMAk1BMQswCQYDVQQGEwJVUzEgMB4GCSqGSIb3DQEJARYRdGxzY2xpZW50QGJzcGsuaW8xHDAaBgNVBAoME0Jlc3Bva2UgRW5naW5lZXJpbmcxDDAKBgNVBAsMA01USTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMmaXQHbs/wc1RpsQ6Orzf6rN+q2ijaZbQxD8oi+XaaN0P/gnE13JqQduvdq77OmJ4bQLokqsd0BexnI07Njsl8nkDDYpe8rNve5TjyUDCfbwgS7U1CluYenXmNQbaYNDOmCdHwwUjV4kKREg6DGAx22Oq7+VHPTeeFgyw4kQgWRSfDENWY3KUXJlb/vKR6lQ+aOJytkvj8kVZQtWupPbvwoJe0na/ISNAOhL74w20DWWoDKoNltXsEtflNljVoi5nqsmZQcjfjt6LO0T7O1OX3Cwu2xWx8KZ3n/2ocuRqKEJHqUGfeDtuQNt6Jz79v/OTr8puLWaD+uyk6NbtGjoQsCAwEAAaOBiTCBhjAJBgNVHRMEAjAAMAsGA1UdDwQEAwIF4DBsBgNVHREEZTBjgglsb2NhbGhvc3SCD3Rsc2NsaWVudC5sb2NhbIcEwKgBBIERdGxzY2xpZW50QGJzcGsuaW+GF2h0dHA6Ly90bHNjbGllbnQubG9jYWwvhhNzc2g6dGxzY2xpZW50LmxvY2FsMA0GCSqGSIb3DQEBCwUAA4IBAQCKKv8WlLrT4Z5NazaUrYtlTF+2v0tvZBQ7qzJQjlOqAcvxry/d2zyhiRCRS/v318YCJBEv4Iq2W3I3JMMyAYEe2573HzT7rH3xQP12yZyRQnetdiVM1Z1KaXwfrPDLs72hUeELtxIcfZ0M085jLboXhufHI6kqm3NCyCCTihe2ck5RmCc5l2KBO/vAHF0ihhFOOOby1v6qbPHQcxAU6rEb907/p6BW/LV1NCgYB1QtFSfGxowqb9FRIMD2kvMSmO0EMxgwZ6k6spa+jk0IsI3klwLW9b+Tfn/daUbIDctxeJneq2anQyU2znBgQl6KILDSF4eaOqlBut/KNZHHazJh"\n    }\n}\n'}),s.a.createElement(p.a,{from:"client",to:"as",language:"json",codeString:'{\n    "key": {\n        "cert#S256": "bwcK0esc3ACC3DB2Y5_lESsXE8o9ltc05O89jdN-dg2"\n    }\n}\n'}),s.a.createElement(l.MDXTag,{name:"h2",components:t},"Decentralized Identifier"),s.a.createElement(l.MDXTag,{name:"p",components:t},"The ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"did")," key method uses a ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"did")," URI to indicate the key. The AS resolves the key document using DID resolution."),s.a.createElement(p.a,{from:"client",to:"as",language:"json",codeString:'{\n    "key": {\n        "did": "did:example:CV3BVVXK2PWWLCRQLRFU#xyz-1"\n    }\n}\n'}),s.a.createElement(l.MDXTag,{name:"h1",components:t},"Presentation Types"),s.a.createElement(l.MDXTag,{name:"p",components:t},"When the client starts a ",s.a.createElement(u.a,{to:"/transactionrequest"},"transaction request")," or continues an ongoing transaction, it must prove possession of any presented keys. The type of proof is indicated by the ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"proof")," parameter value."),s.a.createElement(l.MDXTag,{name:"blockquote",components:t},s.a.createElement(l.MDXTag,{name:"p",components:t,parentName:"blockquote"},'Should we also have an "embedded JWS" method, for instance simply turning the request body into a JWS wrapped by the signature in compact format? That feels counter to the readable nature of the protocol, but since the body is JSON it could potentially work.')),s.a.createElement(l.MDXTag,{name:"h2",components:t},"Detached JSON Web Signature"),s.a.createElement(l.MDXTag,{name:"p",components:t},"This key presentation method is indicated by the ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"jwsd")," value of the ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"proof")," field and uses a detached JWS to sign the request body to the transaction endpoint, which itself is a JSON object. The body is taken as a byte stream, with no parsing or interpretation, and signed using the key. The header of the JWS must include the key ID, the algorithm (which must not be ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"none"),"), and the ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"b64")," attribute to indicate that it is detached. The calculated JWS is set as the ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"Detached-JWS")," HTTP header."),s.a.createElement(p.a,{from:"client",to:"as",language:"http",codeString:'POST /transaction HTTP/1.1\nHost: server.example.com\nContent-Type: application/json\nDetached-JWS: eyJiNjQiOmZhbHNlLCJhbGciOiJSUzI1NiIsImtpZCI6Inh5ei0xIn0..Y287HMtaY0EegEjoTd_04a4GC6qV48GgVbGKOhHdJnDtD0VuUlVjLfwne8AuUY3U7e89zUWwXLnAYK_BiS84M8EsrFvmv8yDLWzqveeIpcN5_ysveQnYt9Dqi32w6IOtAywkNUDZeJEdc3z5s9Ei8qrYFN2fxcu28YS4e8e_cHTK57003WJu-wFn2TJUmAbHuqvUsyTb-nzYOKxuCKlqQItJF7E-cwSb_xULu-3f77BEU_vGbNYo5ZBa2B7UHO-kWNMSgbW2yeNNLbLC18Kv80GF22Y7SbZt0e2TwnR2Aa2zksuUbntQ5c7a1-gxtnXzuIKa34OekrnyqE1hmVWpeQ\n \n{\n    "client": {\n        "name": "My Client Display Name",\n        "uri": "https://example.net/client"\n    },\n    "resources": [\n        "dolphin-metadata"\n    ],\n    "interact": {\n        "type": "redirect",\n        "callback": "https://client.example.net/return/123455",\n        "state": "LKLTI25DK82FX4T4QFZC"\n    },\n    "key": {\n\t\t"proof": "jwsd",\n        "jwks": {\n            "keys": [\n                {\n                    "kty": "RSA",\n                    "e": "AQAB",\n                    "kid": "xyz-1",\n                    "alg": "RS256",\n                    "n": "kOB5rR4Jv0GMeLaY6_It_r3ORwdf8ci_JtffXyaSx8xYJCCNaOKNJn_Oz0YhdHbXTeWO5AoyspDWJbN5w_7bdWDxgpD-y6jnD1u9YhBOCWObNPFvpkTM8LC7SdXGRKx2k8Me2r_GssYlyRpqvpBlY5-ejCywKRBfctRcnhTTGNztbbDBUyDSWmFMVCHe5mXT4cL0BwrZC6S-uu-LAx06aKwQOPwYOGOslK8WPm1yGdkaA1uF_FpS6LS63WYPHi_Ap2B7_8Wbw4ttzbMS_doJvuDagW8A1Ip3fXFAHtRAcKw7rdI4_Xln66hJxFekpdfWdiPQddQ6Y1cK2U3obvUg7w"\n                }\n            ]\n        }\n    }\n}\n'}),s.a.createElement(l.MDXTag,{name:"blockquote",components:t},s.a.createElement(l.MDXTag,{name:"p",components:t,parentName:"blockquote"},"This is susceptible to any number of issues with data transformation, and it doesn't protect the request URL or header, only the body. However, the body is not transformed by adding the signature, which is a benefit for simplicity.")),s.a.createElement(l.MDXTag,{name:"h2",components:t},"HTTP Signatures (Cavage Signatures)"),s.a.createElement(l.MDXTag,{name:"p",components:t},"This key presentation method is indicated by the ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"httpsig")," value of the ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"proof")," field, and it uses the signature method in ",s.a.createElement("a",{href:"https://tools.ietf.org/html/draft-cavage-http-signatures-11"},"Signing HTTP Messages"),". The signature is presented in the ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"Signature")," header and has to cover the body through use of the HTTP Digest header. "),s.a.createElement(p.a,{from:"client",to:"as",language:"http",codeString:'POST /transaction HTTP/1.1\nHost: server.example.com\nContent-Type: application/json\nSignature: keyId="xyz-1", algorithm="hs2019", created=1402170695, expires=1402170995, headers="(request-target) (created) (expires) host date digest content-length", signature="TM8LC7SdXGRKx2k8Me2r_GssYlyRpqvpBlY5-ejCywKRBfctRcnhTTGNztbbDBUyDSWmFMVCHe5mXT4cL0BwrZC6S-uu-LAx06aKwQ"\nDigest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=\n \n{\n    "client": {\n        "name": "My Client Display Name",\n        "uri": "https://example.net/client"\n    },\n    "resources": [\n        "dolphin-metadata"\n    ],\n    "interact": {\n        "type": "redirect",\n        "callback": "https://client.example.net/return/123455",\n        "state": "LKLTI25DK82FX4T4QFZC"\n    },\n    "key": {\n\t\t"proof": "httpsig",\n        "jwks": {\n            "keys": [\n                {\n                    "kty": "RSA",\n                    "e": "AQAB",\n                    "kid": "xyz-1",\n                    "alg": "RS256",\n                    "n": "kOB5rR4Jv0GMeLaY6_It_r3ORwdf8ci_JtffXyaSx8xYJCCNaOKNJn_Oz0YhdHbXTeWO5AoyspDWJbN5w_7bdWDxgpD-y6jnD1u9YhBOCWObNPFvpkTM8LC7SdXGRKx2k8Me2r_GssYlyRpqvpBlY5-ejCywKRBfctRcnhTTGNztbbDBUyDSWmFMVCHe5mXT4cL0BwrZC6S-uu-LAx06aKwQOPwYOGOslK8WPm1yGdkaA1uF_FpS6LS63WYPHi_Ap2B7_8Wbw4ttzbMS_doJvuDagW8A1Ip3fXFAHtRAcKw7rdI4_Xln66hJxFekpdfWdiPQddQ6Y1cK2U3obvUg7w"\n                }\n            ]\n        }\n    }\n}\n'}),s.a.createElement(l.MDXTag,{name:"h2",components:t},"Mutual TLS"),s.a.createElement(l.MDXTag,{name:"p",components:t},"The ",s.a.createElement(l.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"mtls")," key presentation method uses the client certificate presented at the TLS layer to authorize the transaction. No additional fields or headers are added to the HTTP message or JSON body, though a TLS terminating reverse proxy can communicate the client certificate to the AS through a special header. "),s.a.createElement(p.a,{from:"client",to:"as",language:"http",codeString:'POST /transaction HTTP/1.1\nHost: server.example.com\nContent-Type: application/json\n \n{\n    "client": {\n        "name": "My Client Display Name",\n        "uri": "https://example.net/client"\n    },\n    "resources": [\n        "dolphin-metadata"\n    ],\n    "interact": {\n        "type": "redirect",\n        "callback": "https://client.example.net/return/123455",\n        "state": "LKLTI25DK82FX4T4QFZC"\n    },\n    "key": {\n        "cert": "MIIEHDCCAwSgAwIBAgIBATANBgkqhkiG9w0BAQsFADCBmjE3MDUGA1UEAwwuQmVzcG9rZSBFbmdpbmVlcmluZyBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eTELMAkGA1UECAwCTUExCzAJBgNVBAYTAlVTMRkwFwYJKoZIhvcNAQkBFgpjYUBic3BrLmlvMRwwGgYDVQQKDBNCZXNwb2tlIEVuZ2luZWVyaW5nMQwwCgYDVQQLDANNVEkwHhcNMTkwNDEwMjE0MDI5WhcNMjQwNDA4MjE0MDI5WjB8MRIwEAYDVQQDDAlsb2NhbGhvc3QxCzAJBgNVBAgMAk1BMQswCQYDVQQGEwJVUzEgMB4GCSqGSIb3DQEJARYRdGxzY2xpZW50QGJzcGsuaW8xHDAaBgNVBAoME0Jlc3Bva2UgRW5naW5lZXJpbmcxDDAKBgNVBAsMA01USTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMmaXQHbs/wc1RpsQ6Orzf6rN+q2ijaZbQxD8oi+XaaN0P/gnE13JqQduvdq77OmJ4bQLokqsd0BexnI07Njsl8nkDDYpe8rNve5TjyUDCfbwgS7U1CluYenXmNQbaYNDOmCdHwwUjV4kKREg6DGAx22Oq7+VHPTeeFgyw4kQgWRSfDENWY3KUXJlb/vKR6lQ+aOJytkvj8kVZQtWupPbvwoJe0na/ISNAOhL74w20DWWoDKoNltXsEtflNljVoi5nqsmZQcjfjt6LO0T7O1OX3Cwu2xWx8KZ3n/2ocuRqKEJHqUGfeDtuQNt6Jz79v/OTr8puLWaD+uyk6NbtGjoQsCAwEAAaOBiTCBhjAJBgNVHRMEAjAAMAsGA1UdDwQEAwIF4DBsBgNVHREEZTBjgglsb2NhbGhvc3SCD3Rsc2NsaWVudC5sb2NhbIcEwKgBBIERdGxzY2xpZW50QGJzcGsuaW+GF2h0dHA6Ly90bHNjbGllbnQubG9jYWwvhhNzc2g6dGxzY2xpZW50LmxvY2FsMA0GCSqGSIb3DQEBCwUAA4IBAQCKKv8WlLrT4Z5NazaUrYtlTF+2v0tvZBQ7qzJQjlOqAcvxry/d2zyhiRCRS/v318YCJBEv4Iq2W3I3JMMyAYEe2573HzT7rH3xQP12yZyRQnetdiVM1Z1KaXwfrPDLs72hUeELtxIcfZ0M085jLboXhufHI6kqm3NCyCCTihe2ck5RmCc5l2KBO/vAHF0ihhFOOOby1v6qbPHQcxAU6rEb907/p6BW/LV1NCgYB1QtFSfGxowqb9FRIMD2kvMSmO0EMxgwZ6k6spa+jk0IsI3klwLW9b+Tfn/daUbIDctxeJneq2anQyU2znBgQl6KILDSF4eaOqlBut/KNZHHazJh"\n    }\n}\n'}))},t}(s.a.Component),y={}},155:function(e,t,n){"use strict";n.d(t,"b",function(){return m});var a=n(0),r=n.n(a),o=n(4),i=n.n(o),c=n(35),s=n.n(c);n.d(t,"a",function(){return s.a});n(156);var l=r.a.createContext({}),m=function(e){return r.a.createElement(l.Consumer,null,function(t){return e.data||t[e.query]&&t[e.query].data?(e.render||e.children)(e.data?e.data.data:t[e.query].data):r.a.createElement("div",null,"Loading (StaticQuery)")})};m.propTypes={data:i.a.object,query:i.a.string.isRequired,render:i.a.func,children:i.a.func}},156:function(e,t,n){var a;e.exports=(a=n(160))&&a.default||a},157:function(e,t,n){"use strict";var a=n(161),r=n(0),o=n.n(r),i=n(4),c=n.n(i),s=n(169),l=n.n(s),m=n(155);function d(e){var t=e.description,n=e.lang,r=e.meta,i=e.keywords,c=e.title;return o.a.createElement(m.b,{query:p,render:function(e){var a=t||e.site.siteMetadata.description;return o.a.createElement(l.a,{htmlAttributes:{lang:n},title:c,titleTemplate:"%s | "+e.site.siteMetadata.title,meta:[{name:"description",content:a},{property:"og:title",content:c},{property:"og:description",content:a},{property:"og:type",content:"website"},{name:"twitter:card",content:"summary"},{name:"twitter:creator",content:e.site.siteMetadata.author},{name:"twitter:title",content:c},{name:"twitter:description",content:a}].concat(i.length>0?{name:"keywords",content:i.join(", ")}:[]).concat(r)})},data:a})}d.defaultProps={lang:"en",meta:[],keywords:[]},d.propTypes={description:c.a.string,lang:c.a.string,meta:c.a.array,keywords:c.a.arrayOf(c.a.string),title:c.a.string.isRequired},t.a=d;var p="1025518380"},158:function(e,t,n){"use strict";var a=n(159),r=n(0),o=n.n(r),i=n(4),c=n.n(i),s=n(155),l=(n(165),n(166),n(15),[{name:"Request",link:"/transactionrequest/"},{name:"Response",link:"/transactionresponse/"},{name:"Interaction",link:"/interaction/"},{name:"Keys",link:"/keys/"},{name:"Tokens",link:"/tokens/"},{name:"Examples",link:"/examples/"},{name:"About",link:"/about/"}]),m=function(e){var t=e.siteTitle;e.currentPage;return o.a.createElement("div",{className:"header"},o.a.createElement("div",{className:"wrapper"},o.a.createElement("h1",{style:{margin:0}},o.a.createElement(s.a,{to:"/",style:{color:"white",textDecoration:"none"}},t)),o.a.createElement("nav",null,l.map(function(e){return o.a.createElement(s.a,{to:e.link},e.name)}))),o.a.createElement("div",{class:"subnav"}))};m.propTypes={siteTitle:c.a.string},m.defaultProps={siteTitle:""};var d=m,p=(n(167),n(168),function(e){var t=e.children;return o.a.createElement(s.b,{query:"755544856",render:function(e){return o.a.createElement(o.a.Fragment,null,o.a.createElement(d,{siteTitle:e.site.siteMetadata.title}),o.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"0px 1.0875rem 1.45rem",paddingTop:0}},t))},data:a})});p.propTypes={children:c.a.node.isRequired};t.a=p},159:function(e){e.exports={data:{site:{siteMetadata:{title:"OAuth.xyz"}}}}},160:function(e,t,n){"use strict";n.r(t);var a=n(11),r=n.n(a),o=n(0),i=n.n(o),c=n(4),s=n.n(c),l=n(57),m=n(2),d=function(e){var t=e.location,n=m.default.getResourcesForPathnameSync(t.pathname);return n?i.a.createElement(l.a,r()({location:t,pageResources:n},n.json)):null};d.propTypes={location:s.a.shape({pathname:s.a.string.isRequired}).isRequired},t.default=d},161:function(e){e.exports={data:{site:{siteMetadata:{title:"OAuth.xyz",description:"A new authorization protocol based on concepts from OAuth2 and its extensions.",author:"@jricher"}}}}},162:function(e,t,n){"use strict";var a=n(0),r=n.n(a),o=n(434),i=n(433),c=n(172),s=n.n(c),l=n(174),m=n.n(l),d=function(){return r.a.createElement(s.a,{pill:!0,variant:"info"},"Client")},p=function(){return r.a.createElement(s.a,{pill:!0,variant:"secondary"},"Browser")},u=function(){return r.a.createElement(s.a,{pill:!0,variant:"warning"},"AS")},h=function(){return r.a.createElement(s.a,{pill:!0,variant:"dark"},"RS")},g=function(e){return"client"==e?r.a.createElement(d,null):"browser"==e?r.a.createElement(p,null):"as"==e?r.a.createElement(u,null):"rs"==e?r.a.createElement(h,null):r.a.createElement(s.a,{pill:!0,variant:"danger"},"?")},y=function(e){var t=e.from,n=e.to,a=[g(t),"➡",g(n)];return r.a.createElement(m.a,{variant:"dark",className:"alert-network"},a)};t.a=function(e){var t=e.code,n=e.codeString,a=e.from,c=e.to,s=e.language;return s||(s="javascript"),n||(n=JSON.stringify(t,null,4)),a||c?[r.a.createElement(r.a.Fragment,null,r.a.createElement(y,{from:a,to:c}),r.a.createElement(o.a,{language:s,style:i.a,customStyle:{marginTop:0,borderRadius:"0 0 0.3rem 0.3rem"}},n))]:r.a.createElement(o.a,{language:s,style:i.a},n)}}}]);
//# sourceMappingURL=component---src-pages-keys-mdx-34c33a7bd08e35faef52.js.map