{"version":3,"sources":["webpack:///./src/pages/about.mdx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["layoutProps","MDXContent","props","_this","_React$Component","call","this","layout","DefaultLayout","render","_this$props","components","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_4__","name","Layout","Object","assign","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","keywords","href","React","Component","_frontmatter","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SEO","_ref","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","menuLinks","link","Header","siteTitle","currentPage","react_default","className","style","margin","gatsby_browser_entry","to","color","textDecoration","map","class","Fragment","header","maxWidth","padding","paddingTop","_755544856","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape"],"mappings":"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","file":"component---src-pages-about-mdx-e44988473b2e1f1364c9.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/Users/jricher/Projects/oauth.xyz-site/src/components/layout.js\";\nimport SEO from '../components/seo';\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n\n      <SEO title=\"About\" keywords={['oauth', 'authorization', 'security']} />\n      <MDXTag name=\"h1\" components={components}>{`About`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Justin Richer of `}<a href=\"https://bspk.io/\">{`Bespoke Engineering`}</a>{` proposed the XYZ concept and project based on experience and conversations with a wide variety of industry experts. Concepts incorporated into XYZ come from many differnet projects in the internet security and identity space, and have been referenced where applicable. `}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`This work has been supported in part by `}<a href=\"https://securekey.com\">{`SecureKey`}</a>{`.`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    ","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link, graphql } from 'gatsby'\nimport { Location } from '@reach/router';\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst menuLinks = [\n      {\n        name: 'Request',\n        link: '/transactionrequest/'\n      },\n      {\n        name: 'Response',\n        link: '/transactionresponse/'\n      },\n      {\n        name: 'Interaction',\n        link: '/interaction/'\n      },\n      {\n        name: 'Keys',\n        link: '/keys/'\n      },\n      {\n        name: 'Tokens',\n        link: '/tokens/'\n      },\n      {\n        name: 'Examples',\n        link: '/examples/'\n      },\n      {\n        name: 'About',\n        link: '/about/'\n      },\n]\n\nconst Header = ({ siteTitle, currentPage }) => (\n  <div className=\"header\">\n    <div className=\"wrapper\">\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n          <nav>\n            {\n              menuLinks.map(link =>\n                  <Link to={link.link}>{link.name}</Link>\n              )\n            }\n          </nav>\n    </div>\n    <div class=\"subnav\">\n            \n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}